# Generated by Django 4.1.3 on 2023-06-13 00:00

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('hospital', '0022_alter_appointment_table_alter_doctor_table_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Admint',
            fields=[
                ('adminid', models.AutoField(db_column='AdminID', primary_key=True, serialize=False)),
                ('aname', models.CharField(blank=True, db_column='AName', max_length=20, null=True)),
                ('e_mail', models.CharField(blank=True, db_column='E-mail', max_length=40, null=True)),
                ('phonenumber', models.CharField(blank=True, db_column='PhoneNumber', max_length=15, null=True)),
                ('apassword', models.CharField(blank=True, db_column='APassword', max_length=15, null=True)),
            ],
            options={
                'db_table': 'ADMINT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HospitalAppointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patientid', models.PositiveIntegerField(blank=True, db_column='patientId', null=True)),
                ('doctorid', models.PositiveIntegerField(blank=True, db_column='doctorId', null=True)),
                ('patientname', models.CharField(blank=True, db_column='patientName', max_length=40, null=True)),
                ('doctorname', models.CharField(blank=True, db_column='doctorName', max_length=40, null=True)),
                ('appointmentdate', models.DateTimeField(blank=True, db_column='appointmentDate', null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hospital_appointment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HospitalDoctor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=40)),
                ('department', models.CharField(max_length=50)),
                ('status', models.IntegerField()),
                ('profile_pic', models.CharField(blank=True, max_length=100, null=True)),
                ('mobile', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'hospital_doctor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HospitalPatient',
            fields=[
                ('patientid', models.AutoField(db_column='PatientID', primary_key=True, serialize=False)),
                ('pname', models.CharField(blank=True, db_column='PName', max_length=20, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=40, null=True, unique=True)),
                ('phonenumber', models.CharField(blank=True, db_column='PhoneNumber', max_length=15, null=True)),
                ('gender', models.CharField(blank=True, db_column='Gender', max_length=1, null=True)),
                ('age', models.IntegerField(blank=True, db_column='Age', null=True)),
                ('weight', models.IntegerField(blank=True, db_column='Weight', null=True)),
                ('height', models.IntegerField(blank=True, db_column='Height', null=True)),
                ('ppassword', models.CharField(blank=True, db_column='PPassword', max_length=40, null=True)),
                ('assigneddoctorid', models.IntegerField(blank=True, db_column='assignedDoctorId', null=True)),
                ('admitdate', models.DateTimeField(blank=True, db_column='admitDate', null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
                ('symptoms', models.CharField(max_length=100)),
                ('profile_pic', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(max_length=40)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('id', models.IntegerField(blank=True, null=True)),
                ('mobile', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'hospital_patient',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HospitalPatientdischargedetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patientid', models.IntegerField(blank=True, db_column='patientId', null=True)),
                ('patientname', models.CharField(blank=True, db_column='patientName', max_length=40, null=True)),
                ('assigneddoctorname', models.CharField(blank=True, db_column='assignedDoctorName', max_length=40, null=True)),
                ('address', models.CharField(blank=True, max_length=40, null=True)),
                ('mobile', models.CharField(blank=True, max_length=20, null=True)),
                ('symptoms', models.CharField(blank=True, max_length=100, null=True)),
                ('admitdate', models.DateField(db_column='admitDate')),
                ('releasedate', models.DateField(db_column='releaseDate')),
                ('dayspent', models.IntegerField(db_column='daySpent')),
                ('roomcharge', models.IntegerField(db_column='roomCharge')),
                ('medicinecost', models.IntegerField(db_column='medicineCost')),
                ('doctorfee', models.IntegerField(db_column='doctorFee')),
                ('othercharge', models.IntegerField(db_column='OtherCharge')),
                ('total', models.IntegerField()),
            ],
            options={
                'db_table': 'hospital_patientdischargedetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Surveyresult',
            fields=[
                ('surveydate', models.DateTimeField(db_column='SurveyDate', primary_key=True, serialize=False)),
                ('functionalscore', models.FloatField(blank=True, db_column='FunctionalScore', null=True)),
                ('physicalscore', models.FloatField(blank=True, db_column='PhysicalScore', null=True)),
                ('emotionalscore', models.FloatField(blank=True, db_column='EmotionalScore', null=True)),
                ('overallscore', models.FloatField(blank=True, db_column='OverallScore', null=True)),
            ],
            options={
                'db_table': 'SurveyResult',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Testresult',
            fields=[
                ('testdate', models.DateTimeField(db_column='TestDate', primary_key=True, serialize=False)),
                ('pathlength', models.FloatField(blank=True, db_column='PathLength', null=True)),
                ('pathlengthcor', models.FloatField(blank=True, db_column='PathLengthCor', null=True)),
                ('pathlengthsag', models.FloatField(blank=True, db_column='PathLengthSag', null=True)),
                ('normalizedpathlength', models.FloatField(blank=True, db_column='NormalizedPathLength', null=True)),
                ('jerk', models.FloatField(blank=True, db_column='Jerk', null=True)),
                ('jerkcor', models.FloatField(blank=True, db_column='JerkCor', null=True)),
                ('jerksag', models.FloatField(blank=True, db_column='JerkSag', null=True)),
                ('meanvel', models.FloatField(blank=True, db_column='MeanVel', null=True)),
                ('meanvelcor', models.FloatField(blank=True, db_column='MeanVelCor', null=True)),
                ('meanvelsag', models.FloatField(blank=True, db_column='MeanVelSag', null=True)),
                ('accx', models.JSONField(blank=True, db_column='AccX', null=True)),
                ('accz', models.JSONField(blank=True, db_column='AccZ', null=True)),
                ('swayarea', models.FloatField(blank=True, db_column='SwayArea', null=True)),
            ],
            options={
                'db_table': 'TESTRESULT',
                'managed': False,
            },
        ),
        migrations.AlterModelOptions(
            name='appointment',
            options={'managed': False},
        ),
    ]
